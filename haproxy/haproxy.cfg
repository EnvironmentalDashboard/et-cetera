# useful resources for haproxy
# about ssl: https://serversforhackers.com/c/using-ssl-certificates-with-haproxy
# about basic setup: https://www.haproxy.com/blog/the-four-essential-sections-of-an-haproxy-configuration/
# walkthrough of setup: https://www.youtube.com/watch?v=L6U0PcESQ4Y

global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon


defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http


frontend localhost
    default_backend apache
    bind *:80
    bind *:443 ssl crt /etc/ssl/haproxy/environmentaldashboard.org.pem crt /etc/ssl/haproxy/environmentalorb.org.pem
    mode http
    option http-server-close
    option forwardfor
    redirect scheme https code 301 if !{ ssl_fc }
    acl is_mysql hdr(host) -i mysql.communityhub.cloud
    acl is_ssh hdr(host) -i ssh.communityhub.cloud
    acl is_environmentalorb hdr(host) -i environmentalorb.org
    acl is_environmentaldashboard hdr(host) -i environmentaldashboard.org
    acl is_phpmyadmin hdr(host) -i phpmyadmin.communityhub.cloud
    acl is_community_voices path_beg -i /community-voices
    acl is_dsws path_beg -i /digital-signage/websockets
    acl is_ds path_beg -i /digital-signage
    acl is_calendar path_beg -i /calendar
    acl is_oe path_beg -i /online-exhibit
    acl is_letsencrypt path_beg /.well-known/acme-challenge/
    use_backend websockets if is_dsws
    use_backend mysql if is_mysql
    use_backend ssh if is_ssh
    use_backend letsencrypt if is_letsencrypt
    use_backend orb-server if is_environmentalorb
    use_backend community-voices if is_community_voices
    use_backend db-admin if is_phpmyadmin
    use_backend digital-signage if is_ds
    use_backend calendar if is_calendar
    use_backend oe if is_oe

backend apache
    balance roundrobin
    server nyc1 127.0.0.1:8080
    # server nyc1 127.0.0.1:8080 check weight 66 # this is the droplet, send some requests to be served by self
    # server nuc 132.162.36.210:80 check weight 33 # this is the NUC, sitting in the AJLC annex
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

backend orb-server
    balance source
    server chnyc3 157.245.247.38:4726
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

backend digital-signage
    balance source
    server nyc1 127.0.0.1:5000
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

backend websockets
    balance source
    server nyc1 127.0.0.1:5001
    mode http
    option forwardfor

backend community-voices
    balance roundrobin
    # cookie PHPSESSID prefix nocache
    # server nyc1 127.0.0.1:3001 check cookie nyc1
    # server nuc 132.162.36.210:3001 check cookie nuc
    cookie SERVERID insert indirect nocache
    server nyc1 144.126.248.232:31090 check cookie nyc1
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-DOMAIN "oberlin.communityhub.cloud"

backend db-admin
    balance source
    server nyc1 127.0.0.1:8080
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

backend letsencrypt
    # https://serversforhackers.com/c/letsencrypt-with-haproxy
    balance source
    server nyc1 127.0.0.1:8888
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

backend mysql
    balance source
    server nyc1 127.0.0.1:3306
    mode http

backend ssh
    balance source
    server nyc1 127.0.0.1:22
    mode http

backend calendar
    option allbackups
    balance source
    cookie SERVERID insert indirect nocache
    option forwardfor
    http-check expect status 200
    # option httpchk GET /calendar/login?subdomain=oberlin
    # server chnyc1 159.89.233.159:14001 check cookie chnyc1
    # server chnyc1b 159.89.233.159:13999 check cookie chnyc1b backup
    # server chnyc2 159.89.229.25:14001 check cookie chnyc2
    # server chnyc2b 159.89.229.25:13999 check cookie chnyc2b backup
    # server chnyc3 157.245.247.38:14001 check cookie chnyc3
    # server chnyc3b 157.245.247.38:13999 check cookie chnyc3b backup
    # server chnyc4 104.248.124.31:14001 check cookie chnyc4
    # server chnyc4b 104.248.124.31:13999 check cookie chnyc4b backup

    server k8s 144.126.248.232:31031 check cookie k8s
    mode http
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-DOMAIN "oberlin.communityhub.cloud"

backend oe
    balance source
    server nyc1 127.0.0.1:3014
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
